on:
  push:
    paths:
      - backend/**
      - VERSION
      - .github/workflows/build-backend.yml
  pull_request:
    paths:
      - backend/**
      - VERSION
      - .github/workflows/build-backend.yml

jobs:
  prepareEnvironment:
    env:
      target_version: ''
      branch_name: ''
      full_version: ''
    name: Setup build job environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Determine artifact version
        run: echo "target_version=$(cat VERSION)" >> $GITHUB_ENV
      - name: Add buildnumber to artifact tag
        id: targetVersion
        run: echo "::set-output name=target_version::${{ env.target_version }}.${{ github.run_number }}"
      - name: Determine branch suffix [remove prefix]
        uses: frabert/replace-string-action@v1.2
        id: removeRefPrefix
        with:
          pattern: 'refs/(\w+)/(.*)'
          string: ${{ github.ref }}
          replace-with: '$2'
      - name: Determine branch suffix [normalize name]
        uses: frabert/replace-string-action@v1.2
        id: normalizeBranchName
        with:
          pattern: '[^a-zA-Z\d]'
          string: ${{ steps.removeRefPrefix.outputs.replaced }}
          flags: g
          replace-with: '-'
      - name: Determine branch suffix [write to env]
        id: branchName
        run: echo "::set-output name=branch_name::${{ steps.normalizeBranchName.outputs.replaced }}"
      - name: Determine full version [Part 1]
        run: echo "full_version=${{ env.target_version }}" >> $GITHUB_ENV
      - name: Determine full version [Part 2]
        if: ${{ env.branch_name != 'master' }}
        run: echo "full_version=${{ env.target_version }}-${{env.branch_name}}" >> $GITHUB_ENV
      - name: Set full version output
        id: fullVersion
        run: echo "::set-output name=full_version::${{ env.target_version }}"
    outputs:
      full_version: ${{ steps.fullVersion.outputs.full_version }}
      target_version: ${{ steps.targetVersion.outputs.target_version }}
      branch_name: ${{ steps.branchName.outputs.branch_name }}
  testAndBuild:
    needs:
      - prepareEnvironment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Execute Unittests
        run: gradle :backend:test
      - name: Build Jar
        run: gradle :backend:assemble :backend:check -x test
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: oc-server-jar
          path: backend/build/libs/*${{ env.full_version }}.jar
  buildContainerImage:
    needs:
      - testAndBuild
      - prepareEnvironment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Debug env
        run: echo ${{ needs.prepareEnvironment.outputs.full_version }}
      - uses: actions/download-artifact@v2
        with:
          name: oc-server-jar
          path: build/libs/
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: ghcr.io/outstanding-cobra-server:${{ needs.prepareEnvironment.outputs.full_version }}
